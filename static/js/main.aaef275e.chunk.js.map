{"version":3,"sources":["components/NewsItem.tsx","components/News.tsx","api/news.ts","modules/news.ts","components/Category.tsx","containers/NewsContainer.tsx","App.tsx","modules/index.ts","index.tsx"],"names":["NewsItem","title","urlToImage","description","publishedAt","url","className","href","target","rel","src","alt","News","data","loading","error","map","article","key","getNewsApi","category","a","receivedCategory","axios","get","response","articles","defaults","baseURL","getNews","type","getNewsSuccess","news","payload","initialState","state","action","categories","name","text","React","memo","item","exact","to","match","useSelector","dispatch","useDispatch","params","console","log","useEffect","newsApi","App","path","component","NewsContainers","rootReducer","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaef275e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './newsItem.scss';\r\n\r\ntype NewsItemProps = {\r\n  title: string;\r\n  urlToImage: string;\r\n  description: string;\r\n  publishedAt: Date;\r\n  url: string;\r\n};\r\n\r\nfunction NewsItem({\r\n  title,\r\n  urlToImage,\r\n  description,\r\n  publishedAt,\r\n  url,\r\n}: NewsItemProps) {\r\n  return (\r\n    <div className=\"article\">\r\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <img className=\"thumbnail\" src={urlToImage} alt=\"thumbnail\" />\r\n      </a>\r\n      <div className=\"text-block\">\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <h2>{title}</h2>\r\n        </a>\r\n        <span>{publishedAt}</span>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsItem;\r\n","import React from 'react';\r\nimport './news.scss';\r\nimport { NewsArray } from '../api/news';\r\nimport { AxiosError } from 'axios';\r\nimport NewsItem from './NewsItem';\r\n\r\ntype NewsProps = {\r\n  data: NewsArray;\r\n  loading: boolean;\r\n  error: AxiosError | null;\r\n};\r\n\r\nfunction News({ data, loading, error }: NewsProps): any {\r\n  return data.map((article) => (\r\n    <NewsItem\r\n      key={article.title}\r\n      title={article.title}\r\n      urlToImage={article.urlToImage}\r\n      description={article.description}\r\n      publishedAt={article.publishedAt}\r\n      url={article.url}\r\n    />\r\n  ));\r\n}\r\n\r\nexport default News;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'http://newsapi.org/v2/top-headlines?country=kr&apiKey=c5d4a2f093234ce1ac7923d7d507de61';\r\n\r\nexport async function getNewsApi(category: string) {\r\n  const receivedCategory = category === '' ? '' : `&category=${category}`;\r\n  const response = await axios.get(\r\n    `http://newsapi.org/v2/top-headlines?country=kr&apiKey=c5d4a2f093234ce1ac7923d7d507de61${receivedCategory}`\r\n  );\r\n  return response.data.articles;\r\n}\r\n\r\nexport type NewsData = {\r\n  source: Source;\r\n  author: null;\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  urlToImage: string;\r\n  publishedAt: Date;\r\n  content: string;\r\n};\r\n\r\ntype Source = {\r\n  id: null;\r\n  name: string;\r\n};\r\n\r\nexport type NewsArray = NewsData[];\r\n","import * as newsApi from '../api/news';\r\nimport { AxiosError } from 'axios';\r\n\r\nexport const GET_NEWS = 'news/GET_NEWS' as const;\r\nexport const GET_NEWS_SUCCESS = 'news/GET_NEWS_SUCCESS' as const;\r\nexport const GET_NEWS_ERROR = 'news/GET_NEWS_ERROR' as const;\r\n\r\nexport const getNews = () => ({\r\n  type: GET_NEWS,\r\n});\r\n\r\nexport const getNewsSuccess = (news: newsApi.NewsArray) => ({\r\n  type: GET_NEWS_SUCCESS,\r\n  payload: news,\r\n});\r\n\r\nexport const getNewsError = (error: AxiosError) => ({\r\n  type: GET_NEWS_ERROR,\r\n  payload: error,\r\n});\r\n\r\ntype NewsAction =\r\n  | ReturnType<typeof getNews>\r\n  | ReturnType<typeof getNewsSuccess>\r\n  | ReturnType<typeof getNewsError>;\r\n\r\nexport type NewsState = {\r\n  news: {\r\n    loading: boolean;\r\n    data: newsApi.NewsArray | null;\r\n    error: AxiosError | null;\r\n  };\r\n};\r\n\r\nconst initialState: NewsState = {\r\n  news: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\nexport const getNewsApi = (category: string = '') => async (dispatch: any) => {\r\n  dispatch(getNews);\r\n  try {\r\n    const news = await newsApi.getNewsApi(category);\r\n    dispatch(getNewsSuccess(news));\r\n  } catch (e) {\r\n    dispatch(getNewsSuccess(e));\r\n  }\r\n};\r\n\r\nfunction news(state: NewsState = initialState, action: NewsAction) {\r\n  switch (action.type) {\r\n    case GET_NEWS:\r\n      return {\r\n        ...state,\r\n        news: {\r\n          loading: true,\r\n          data: null,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_NEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        news: {\r\n          loading: false,\r\n          data: action.payload,\r\n          error: null,\r\n        },\r\n      };\r\n    case GET_NEWS_ERROR:\r\n      return {\r\n        ...state,\r\n        news: {\r\n          loading: false,\r\n          data: null,\r\n          error: action.payload,\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default news;\r\n","import React from 'react';\r\nimport './category.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst categories = [\r\n  { name: '', text: '전체보기' },\r\n  { name: 'business', text: '비즈니스' },\r\n  { name: 'entertainment', text: '엔터테인먼트' },\r\n  { name: 'health', text: '건강' },\r\n  { name: 'science', text: '과학' },\r\n  { name: 'sports', text: '스포츠' },\r\n  { name: 'technology', text: '기술' },\r\n];\r\n\r\ntype CategoryProps = {\r\n  category: string;\r\n};\r\n\r\nfunction Category({ category }: CategoryProps) {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {categories.map((item) => (\r\n          <NavLink\r\n            key={item.name}\r\n            exact={item.name === category}\r\n            to={item.name === '' ? '/' : `/${item.name}`}\r\n          >\r\n            {item.text}\r\n          </NavLink>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default React.memo(Category);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport News from '../components/News';\r\nimport { getNewsApi } from '../modules/news';\r\nimport Category from '../components/Category';\r\n\r\nfunction NewsContainers({ match }: any) {\r\n  const { loading, data, error } = useSelector(\r\n    (state: RootState) => state.news.news\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const category: string = match.params.category || '';\r\n  console.log('category : ', category);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNewsApi(category));\r\n  }, [category, dispatch]);\r\n\r\n  if (!data) return null;\r\n  if (loading) return <div>로딩중 ...</div>;\r\n\r\n  return (\r\n    <>\r\n      <Category category={category} />\r\n      <News data={data} loading={loading} error={error} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(NewsContainers);\r\n","import React from 'react';\r\nimport NewsContainers from './containers/NewsContainer';\r\nimport { Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return <Route path=\"/:category?\" component={NewsContainers} />;\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux';\r\nimport news from './news';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    news\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport Thunk from 'redux-thunk';\r\nimport rootReducer from './modules';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(Thunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}